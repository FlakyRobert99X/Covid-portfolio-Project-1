<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="portfolio.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="8726"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><table title="Employee" custom_title="0" dock_id="1" table="4,8:mainEmployee"/><dock_state state="000000ff00000000fd00000001000000020000000000000000fc0100000001fb000000160064006f0063006b00420072006f00770073006500310100000000ffffffff0000011800ffffff000000000000000000000004000000040000000800000008fc00000000"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Employee" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="81"/><column index="2" value="78"/><column index="3" value="78"/><column index="4" value="78"/><column index="5" value="83"/><column index="6" value="29"/><column index="7" value="54"/><column index="8" value="86"/><column index="9" value="182"/><column index="10" value="82"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1*">SELECT (CAST(total_deaths AS REAL) / CAST(total_cases AS REAL)) * 100 AS DeathPercentage
FROM CovidDeaths;

--TOTAL CASES VS TOTAL DEATHS (Shows the likelihood of dying)
SELECT location, date, total_cases, total_deaths, 
       (CAST(total_deaths AS REAL) / CAST(total_cases AS REAL)) * 100 AS DeathPercentage
FROM CovidDeaths
WHERE location like '%Nigeria%'
ORDER BY location, date;


--TOTAL CASES VS POPULATION (Shows the population that got Covid)

SELECT location, date, population, total_cases,
       (CAST(total_cases AS REAL) / population) * 100 AS PopulationInfected
FROM CovidDeaths
WHERE location LIKE '%Nigeria%'
ORDER BY location, date;


--COUNTRIES WITH HIGHEST RATE OF INFECTION VS POPULATION
SELECT location, population, MAX(total_cases) AS HighestInfection,
       MAX((CAST(total_cases AS REAL) / CAST(population AS REAL))) * 100 AS PopulationInfected
FROM CovidDeaths
WHERE location LIKE '%Nigeria%'
GROUP BY location, population
ORDER BY PopulationInfected DESC;

--	COUNTRIES WITH THE HIGHEST DEATH COUNT PER POPULATION

SELECT location, max(CAST(total_deaths as INTEGER)) AS Totaldeathscount
FROM CovidDeaths
WHERE location LIKE '%Nigeria%'
GROUP BY location
ORDER BY Totaldeathscount DESC;

--CONTINENTS WITH THE HIGHEST DEATH COUNT 

SELECT location, max(CAST(total_deaths as INTEGER)) AS Totaldeathscount
FROM CovidDeaths
WHERE continent IS NULL
GROUP BY location
ORDER BY Totaldeathscount DESC;

-- GLOBAL NUMBERS

SELECT date, SUM(new_cases) as total_cases, SUM(CAST(new_deaths as INT)) as total_deaths,
SUM(CAST(new_deaths as INT))/ SUM(new_cases)*100 as deathpercentage
FROM CovidDeaths
WHERE continent IS NULL
GROUP BY date
ORDER BY 1,2 DESC;

--TOTAL VACCINATION AND POPULATION

SELECT 
    Cd.continent, 
    Cd.location, 
    Cd.date, 
    Cd.population, 
    Cv.new_vaccinations, 
    SUM(CAST(Cv.new_vaccinations AS INT)) 
        OVER (PARTITION BY Cd.location ORDER BY Cd.date) AS RollingPeopleVaccinated
FROM CovidDeaths Cd
JOIN CovidVaccinations Cv
    ON Cd.location = Cv.location
    AND Cd.date = Cv.date
WHERE Cd.continent IS NULL
ORDER BY Cd.location, Cd.date;

--PERCENTAGE OF TOTAL VACCINATION AND POPULATION 
SELECT 
    sub.continent, 
    sub.location, 
    sub.date, 
    sub.population, 
    sub.new_vaccinations, 
    sub.RollingPeopleVaccinated, 
    (sub.RollingPeopleVaccinated / sub.population) * 100 AS VaccinationPercentage
FROM (
    SELECT 
        Cd.continent, 
        Cd.location, 
        Cd.date, 
        Cd.population, 
        Cv.new_vaccinations, 
        SUM(CAST(Cv.new_vaccinations AS INT)) 
            OVER (PARTITION BY Cd.location ORDER BY Cd.date) AS RollingPeopleVaccinated
    FROM CovidDeaths Cd
    JOIN CovidVaccinations Cv
        ON Cd.location = Cv.location
        AND Cd.date = Cv.date
    WHERE Cd.continent IS NULL
) sub
ORDER BY sub.location, sub.date;

--CREATING A VIEW FOR THE DATA ABOVE
CREATE VIEW RollingVaccinationView AS
SELECT 
    Cd.continent, 
    Cd.location, 
    Cd.date, 
    Cd.population, 
    Cv.new_vaccinations, 
    SUM(CAST(Cv.new_vaccinations AS INT)) 
        OVER (PARTITION BY Cd.location ORDER BY Cd.date) AS RollingPeopleVaccinated,
    (SUM(CAST(Cv.new_vaccinations AS INT)) 
        OVER (PARTITION BY Cd.location ORDER BY Cd.date) / Cd.population) * 100 AS VaccinationPercentage
FROM CovidDeaths Cd
JOIN CovidVaccinations Cv
    ON Cd.location = Cv.location
    AND Cd.date = Cv.date
WHERE Cd.continent IS NULL;



</sql><sql name="SQL 2*">SELECT location
FROM CovidDeaths
WHERE location like '%states%';

SELECT *
FROM CovidDeaths;

SELECT *
FROM CovidVaccinations;

SELECT sqlite_version();

SELECT * FROM RollingVaccinationView;
</sql><current_tab id="0"/></tab_sql></sqlb_project>
